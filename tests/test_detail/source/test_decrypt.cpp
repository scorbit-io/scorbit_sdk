/*
 * Scorbit SDK
 *
 * (c) 2025 Spinner Systems, Inc. (DBA Scorbit), scrobit.io, All Rights Reserved
 *
 * MIT License
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

#include "utils/decrypt.h"
#include "utils/bytearray.h"

#include <catch2/catch_test_macros.hpp>

// clazy:excludeall=non-pod-global-static

using namespace scorbit;
using namespace scorbit::detail;

TEST_CASE("Decrypt")
{
    // Encrypted key TEST_ENCRYPTED_KEY is generated by encrypt_tool configured with the following:
    /*
        SCORBIT_SDK_ENCRYPT_SECRET=secret cmake -Bbuild -D SCORBIT_SDK_PRODUCTION=OFF . \
        && cmake --build build \
        && ./build/encrypt_tool 07D54D8B3B2743550071639FDA6F5ED7BB0407C479FDA3A5CDBD22B09870DCF9 test
     */
    constexpr auto TEST_ENCRYPTED_KEY {
            "PxRcOEcf47gKYGbnrYBTtB/"
            "uEFNoC1p+Vd6+zLFio2iQk+40G2jQZAW5QbyapwJ2JF4qOi91yp5CXbQ91Ly0KyygM6WtWFj6p5WvgQ=="};
    constexpr auto TEST_KEY {"07D54D8B3B2743550071639FDA6F5ED7BB0407C479FDA3A5CDBD22B09870DCF9"};

    // Make sure that encrypted key is decrypted correctly.
    // Encrypted key TEST_ENCRYPTED_KEY is generated during cmake configuration
    auto decrypted = ByteArray(decryptSecret(TEST_ENCRYPTED_KEY, "testsecret")).hex();
    CHECK(decrypted == TEST_KEY);
}
